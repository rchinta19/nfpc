app.post('/defectlogdaydata', (req,res) => {
  console.log("request for historylog arrived")
  console.log(req.body.from)
  console.log(req.body.to)
  console.log(req.body.skip)
  console.log(req.body.limit)
  let value = (req.body.skip);
  console.log(value);
  // let filterdata = `select * from historylog where Sl_No BETWEEN ? AND ?`;
 db.all(`select * from Defectlog where Time_Stamp BETWEEN ? AND ?   LIMIT ? OFFSET  ?`,[req.body.from,req.body.to,req.body.limit,value],(err, hdrows) => {
    
   //db.all(`select * from historylog (MULTISET (SELECT SKIP ? FIRST ?) where Time_Stamp BETWEEN ? AND ?  `,[req.body.skip,req.body.limit,req.body.from,req.body.to],(err, hdrows) => {
    if (err) {
      throw err;
    }
    
    res.send(hdrows);
   
    console.log(hdrows )
  })

});
// defectlog table rendering
app.post('/defectfilternextpage', (req,res) => {
  console.log("request arrived for nextpage")
 
  console.log(req.body.from)
  console.log(req.body.to)
  console.log(req.body.skip)
  console.log(req.body.limit)
  let value = (req.body.skip);
  console.log(value);
  // let filterdata = `select * from historylog where Sl_No BETWEEN ? AND ?`;
  db.all(`Select * from Defectlog where Time_Stamp between ? and ? LIMIT ? OFFSET  ?`,[req.body.from,req.body.to+1,req.body.limit,value],(err, hfnrows) => {
   
    if (err) {
      throw err;
    }
    
    res.send(hfnrows);
    console.log(hfnrows )
  })

});

app.post('/defectfilterpreviouspage', (req,res) => {
  console.log("request arrived for")
 
  console.log(req.body.from)
  console.log(req.body.to)
  console.log(req.body.skip)
  console.log(req.body.limit)
  let value = (req.body.skip);
  console.log(value);
  // let filterdata = `select * from historylog where Sl_No BETWEEN ? AND ?`;
  db.all(`Select * from Defectlog where Time_Stamp between ? and ? LIMIT ? OFFSET  ?`,[req.body.from,req.body.to+1,req.body.limit,value],(err, hfrows) => {
   
    if (err) {
      throw err;
    }
    
    res.send(hfrows);
    console.log(hfrows )
  })

});